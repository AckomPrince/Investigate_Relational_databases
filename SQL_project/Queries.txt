


############### New sheet ###############
/*Which country is the most profitable for the business?*/

/* Slides 1 */


SELECT country, COUNT(*) AS total_no_customers, SUM(amount) AS total_sales
FROM country
INNER JOIN city
ON country.country_id = city.country_id
INNER JOIN address 
ON city.city_id = address.city_id
INNER JOIN customer 
ON address.address_id = customer.address_id
INNER JOIN payment 
ON customer.customer_id = payment.customer_id
GROUP BY 1
ORDER BY 2 DESC

LIMIT 10;






/*What is the customer base in the countries where we have a presence?*/

/* Slides 2 */

SELECT country, COUNT(customer_id) OVER (PARTITION BY country) AS total_no_customers
FROM country
INNER JOIN city
ON country.country_id = city.country_id
INNER JOIN address 
ON city.city_id = address.city_id
INNER JOIN customer 
ON address.address_id = customer.address_id
ORDER BY 2 DESC






/*How many rented movies were returned late, early, and on time*/

/* Slides 3 */

SELECT CASE 
       WHEN rental_duration > date_part('day',return_date-rental_date) THEN 'returned early'
       WHEN rental_duration = date_part('day',return_date-rental_date) THEN 'returned on time'
       ELSE 'return late'
       END AS status_of_return,
       	COUNT(*) AS total_no_of_films
        FROM film
        INNER JOIN inventory 
        ON film.film_id = inventory.film_id
        INNER JOIN rental 
        ON inventory.inventory_id = rental.inventory_id 
        GROUP BY 1
        ORDER BY 2 DESC;







/*What are the top and least rented (in-demand) genres and what are their total sales? */

/*slides 4 */


WITH t1 AS (SELECT c.name Genre, COUNT(cu.customer_id) AS total_rent_demand
            FROM category c 
            JOIN film_category fc 
            USING(category_id)
            JOIN film f
            USING(film_id)
            JOIN inventory i
            USING(film_id)
            JOIN rental r
            USING(inventory_id)
            JOIN customer cu 
            USING(customer_id)
            GROUP BY 1 
            ORDER BY 2 DESC),
     t2 AS (SELECT c.name Genre, SUM(p.amount) AS total_sales
            FROM category c 
            JOIN film_category fc 
            USING(category_id)
            JOIN film f
            USING(film_id)
            JOIN inventory i
            USING(film_id)
            JOIN rental r
            USING(inventory_id)
            JOIN payment p
            USING(rental_id)
            GROUP BY 1 
            ORDER BY 2 DESC)
SELECT t1.genre, t1.total_rent_demand, t2.total_sales
FROM t1
JOIN t2 
ON t1.genre = t2.genre





